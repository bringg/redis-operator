apiVersion: k8s.amaiz.com/v1alpha1
kind: Redis
metadata:
  labels:
    app.kubernetes.io/instance: example
    app.kubernetes.io/name: redis
  name: example
  namespace: redis
spec:
  # affinity, annotations, securityContext, nodeSelector tolerations and priorityClassName (all optional)
  # are added to the resulting StatefulSet's PodTemplate.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#podspec-v1-core
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/instance: example
                app.kubernetes.io/name: redis
            topologyKey: kubernetes.io/hostname
          weight: 100

  # dataVolumeClaimTemplate allows to define a persistent volume template for Redis. (optional)
  # If omitted, emptyDir will be used.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#persistentvolumeclaim-v1-core
  #  dataVolumeClaimTemplate:
  #    metadata:
  #      name: redis-data
  #    spec:
  #      storageClassName: standard
  #      accessModes:
  #      - ReadWriteOnce
  #      resources:
  #        requests:
  #          storage: 1Gi

  # Redis container definition (required)
  # image, resources and securityContext are the same as found in v1.Container.
  # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#container-v1-core

  annotations:
    prometheus.io/port: '9121'
    prometheus.io/scrape: 'true'
  # config is a set of key-value pairs needed for configuring Redis instances. (optional)
  # keys and values should be string values
  # More info: https://redis.io/topics/config
  # config will appear as a ConfigMap and will be mounted to every Redis instance.
  # Note that the following keywords will be ignored:
  # include, bind, protected-mode, port, daemonize, dir, replica-announce-ip,
  # replica-announce-port, replicaof, masterauth, requirepass, rename-command
  config:
    client-output-buffer-limit: slave 0 0 0
    maxmemory: 256mb
    maxmemory-policy: volatile-ttl
    repl-backlog-size: 64mb
    save: 600 1

  # Password allows to refer to a Secret containing password for Redis. (optional)
  # Password should be strong enough. Passwords shorter than 8 characters
  # composed of ASCII alphanumeric symbols will lead to a mild warning logged by the Operator.
  # Please note that password hashes are added as annotations to Pods to enable
  # password rotation. Hashes are generated using argon2id KDF.
  # Changing the password in the referenced Secret will not trigger
  # the rolling Statefulset upgrade automatically.
  # However an event in regard to any objects owned by the Redis resource
  # fired afterwards will trigger the rolling upgrade.
  # Redis operator does not store the password internally and reads it
  # from the Secret any time the Reconcile is called.
  # Hence it will not be able to connect to Pods with the ``old'' password.
  # In scenarios when persistence is turned off all the data will be lost
  # during password rotation.
  #  password:
  #    # More info: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#secretkeyselector-v1-core
  #    secretKeyRef:
  #      key: password
  #      name: redis-password-secret

  # Redis exporter container definition (optional)
  exporter:
    image: oliver006/redis_exporter:v1.43.1
    #  To disable THP
    #  volumes:
    #    - name: sys
    #      hostPath:
    #        path: /sys
    #  initContainers:
    #    - name: disable-thp
    #      image: busybox
    #      command: ["sh", "-c"]
    #      args:
    #        - |-
    #          set -e
    #          set -o pipefail
    #
    #          echo never > /rootfs/sys/kernel/mm/transparent_hugepage/enabled
    #
    #          grep -q -F [never] /sys/kernel/mm/transparent_hugepage/enabled
    #      volumeMounts:
    #        - name: sys
    #          mountPath: /rootfs/sys
    #          type: Directory
  initContainers:
    - args:
        - |
          sysctl -w net.core.somaxconn=1024
          exit 0
      command:
        - sh
        - '-c'
      image: busybox
      name: sysctl
      securityContext:
        privileged: true
        runAsUser: 0
  redis:
    image: redis:6-alpine
    initialDelaySeconds: 10
    resources:
      limits:
        memory: 384Mi
  replicas: 3
